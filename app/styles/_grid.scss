// Containers width for each breakpoint
$container-xs: 100% !default;
$container-sm: 100% !default;
$container-md: 100% !default;
$container-lg: 61.8033% !default;
$container-xl: 61.8033% !default;
$container-xxl: 61.8033% !default;

$column-count: 12 !default;
$column-selector: '.col' !default;
$container-selector: '.container' !default;
$fluid-container-selector: '.container-fluid' !default;
$offset-modifier: 'offset' !default;
$gutter-width: 1rem !default;
$outer-margin: 4rem !default;
$gutter-compensation: (($gutter-width / 2) * -1) !default;
$half-gutter-width: ($gutter-width / 2) !default;

$margin-xs: $line-height-xs;
$margin-sm: $line-height-sm;
$margin-md: $line-height-md;
$margin-lg: $line-height-lg;
$margin-xl: $line-height-xl;
$margin-xxl: $line-height-xxl;

// Fluid containers padding for each breakpoint
$fluid-container-xs-p: 0;
$fluid-container-sm-p: 0;
$fluid-container-md-p: $margin-md;
$fluid-container-lg-p: $margin-lg;
$fluid-container-xl-p: $margin-xl;
$fluid-container-xxl-p: $margin-xxl;

// Containers padding for each breakpoint
$container-xs-p: $margin-xs;
$container-sm-p: $margin-sm;
$container-md-p: ($margin-md * 2);
$container-lg-p: 0;
$container-xl-p: 0;
$container-xxl-p: 0;

$block-delimiter: '-' !default;
$element-delimiter: '-' !default;
$modifier-delimiter: '-' !default;
$default-query: $viewport-xs !default;

$containers: (
    #{$xs}:#{$container-xs},
    #{$sm}:#{$container-sm},
    #{$md}:#{$container-md},
    #{$lg}:#{$container-lg},
    #{$xl}:#{$container-xl},
    #{$xxl}:#{$container-xxl}) !default;
$fluid-containers-p: (
    #{$xs}:#{$fluid-container-xs-p},
    #{$sm}:#{$fluid-container-sm-p},
    #{$md}:#{$fluid-container-md-p},
    #{$lg}:#{$fluid-container-lg-p},
    #{$xl}:#{$fluid-container-xl-p},
    #{$xxl}:#{$fluid-container-xxl-p}) !default;
$containers-p: (
    #{$xs}:#{$container-xs-p},
    #{$sm}:#{$container-sm-p},
    #{$md}:#{$container-md-p},
    #{$lg}:#{$container-lg-p},
    #{$xl}:#{$container-xl-p},
    #{$xxl}:#{$container-xxl-p}) !default;

$column-properties: 'flex-basis',
                    'max-width' !default;
$offset-properties: 'margin-left' !default;

.layout {
    display: flex;
    min-height: 100vh;
    flex-direction: column;
}

%container {
    margin: 0 auto;
    overflow: hidden;
    box-sizing: border-box;
}

@mixin auto-width() {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
}

@mixin percent-width($property, $columns, $count) {
    #{$property}: ((100% / $columns) * $count);
}

@mixin percent-offset($property, $columns, $count) {
    $single-column-width: ((100% / $columns) * 1);
    #{$property}: $single-column-width * $count;
}

@mixin containers($selector: $container-selector, $queries: $queries) {
    @each $size in $sizes {
        $query: map-get($containers, $size);
        $query-p: map-get($containers-p, $size);

        @include queries($size, $queries) {
            #{$selector} {
                margin: 0 auto;
                padding-right: #{$query-p};
                padding-left: #{$query-p};
                width: #{$query};
                overflow: hidden;
                box-sizing: border-box;
            }
        }
    }
}

@mixin fluid-containers($selector: $fluid-container-selector, $queries: $queries) {
    @each $size in $sizes {
        $query: map-get($containers, $size);
        $query-p: map-get($fluid-containers-p, $size);

        @include queries($size, $queries) {
            #{$selector} {
                margin: 0 auto;
                padding-right: #{$query-p};
                padding-left: #{$query-p};
                width: 100%;
                overflow: hidden;
                box-sizing: border-box;
            }
        }
    }
}

@mixin columns($selector: $column-selector, $properties: $column-properties, $columns: $column-count, $queries: $queries) {
    @each $size in $sizes {
        $iterator-selector: '';
        @for $i from 0 through $columns {
            @if ($i == 0) {
                $iterator-selector: #{$selector}#{$block-delimiter}#{$size};
            } @else {
                $iterator-selector: #{$selector}#{$block-delimiter}#{$size}#{$modifier-delimiter}#{$i};
            }

            #{$iterator-selector} {
                @extend %column;
            }
        }

        @include queries($size, $queries) {
            @for $i from 0 through $columns {
                @if ($i == 0) {
                    #{$selector}#{$block-delimiter}#{$size} {
                        @content;
                        @include auto-width();
                    }
                } @else {

                    #{$selector}#{$block-delimiter}#{$size}#{$modifier-delimiter}#{$i} {
                        @content;
                        @each $prop in $properties {
                            @include percent-width($prop, $columns, $i);
                        }
                    }
                }
            }
        }
    }
}

@mixin offsets($selector: $column-selector, $modifier-selector: $offset-modifier, $properties: $offset-properties, $columns: $column-count, $queries: $queries) {
    @each $size in $sizes {
        @for $i from 1 through $columns {
            #{$selector}#{$block-delimiter}#{$size}#{$modifier-delimiter}#{$modifier-selector}#{$modifier-delimiter}#{$i} {
                @extend %column;
            }
        }

        @include queries($size, $queries) {
            @for $i from 1 through $columns {
                #{$selector}#{$block-delimiter}#{$size}#{$modifier-delimiter}#{$modifier-selector}#{$modifier-delimiter}#{$i} {
                    @content;
                    @each $prop in $properties {
                        @include percent-offset($prop, $columns, $i);
                    }
                }
            }
        }
    }
}

@include containers();
@include fluid-containers();

.row {
    display: flex;
    margin-right: $gutter-compensation;
    margin-left: $gutter-compensation;
    flex-wrap: wrap;
    flex-direction: row;
    box-sizing: border-box;
}

%column {
    padding-right: $half-gutter-width;
    padding-left: $half-gutter-width;
    flex-grow: 0;
    flex-shrink: 0;
    box-sizing: border-box;
}

@include columns();
@include offsets();
